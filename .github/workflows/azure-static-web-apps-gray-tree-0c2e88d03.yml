name: Azure Static Web Apps CI/CD
permissions:
  contents: read
  pull-requests: write

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || github.event.action != 'closed'
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    
   # Define environment variables accessible to steps
    env:
      STORYBLOK_API_KEY_PUBLIC_VAL: ${{ secrets.STORYBLOK_API_KEY_PUBLIC }}
      STORYBLOK_API_KEY_PREVIEW_VAL: ${{ secrets.STORYBLOK_API_KEY_PREVIEW }}
      APPSETTINGS_PATH: Client/wwwroot/appsettings.json

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Inject Secrets into appsettings.json
        run: |
          echo "Injecting secrets into ${{ env.APPSETTINGS_PATH }}..."
          if [ ! -f "${{ env.APPSETTINGS_PATH }}" ]; then
            echo "Error: appsettings.json not found at ${{ env.APPSETTINGS_PATH }}"
            exit 1
          fi
          sed -i "s#__STORYBLOK_API_KEY_PUBLIC__#${STORYBLOK_API_KEY_PUBLIC_VAL}#g" "${{ env.APPSETTINGS_PATH }}"
          sed -i "s#__STORYBLOK_API_KEY_PREVIEW__#${STORYBLOK_API_KEY_PREVIEW_VAL}#g" "${{ env.APPSETTINGS_PATH }}"
          echo "Secrets injected."

      - name: Build and Deploy to Azure Static Web Apps
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_GRAY_TREE_0C2E88D03 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Required for GitHub integrations (like PR comments)
          action: "upload"

          # --- App Configuration ---
          # Location of your Blazor WASM source code project
          app_location: "Client"
          # Location of API source code (leave blank if none)
          api_location: ""
          # Location of the build output directory relative to app_location.
          # For Blazor WASM, the publish command often outputs to 'wwwroot' within a 'publish' or 'Release' folder.
          # However, the SWA action is smart; often leaving this blank or as "wwwroot" works if it detects the Blazor project correctly.
          # If deployment fails, you might need to explicitly build first and set this to the specific build output subfolder (e.g., "bin/Release/netstandard2.1/publish/wwwroot").
          # For simplicity with the SWA build/deploy action, "wwwroot" is often sufficient if your appsettings.json is IN the project's wwwroot.
          output_location: "wwwroot"
          # --- End App Configuration ---

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Placeholder for PR Cleanup Logic
        run: echo "PR closed. Azure SWA might automatically handle environment cleanup."
